function [bioQualifiers,standardQualifiers] = getBioQualifiers()
% Get a list of possible bioqualifiers
%
% USAGE:
%    annotationQualifiers = getBioQualifiers()
%
% OUTPUT:
%    bioQualifiers:    A cell array of bioqualifier strings in descending order.
%    standardQualifiers:        A n x 2 cell array with the first column representing the standard identifiers and the second column representing the alternative name.

bioQualifiers = {'version','taxon','relation',...
                 'propertyBearer','property',...
                 'parthood','part','origin','occursIn',...
                 'isVersionOf','isRelatedTo','isPropertyOf',...
                 'isPartOf','isInstanceOf','isHomologTo','isEncodedBy',...
                 'isDescribedBy','isDerivedFrom','is','instance','identity',...
                 'hypernym','homolog','hasVersion',...
                 'hasTaxon','hasProperty','hasPart','hasInstance',...
                 'encodes','encoder','encodement',...
                 'description','container','class'};
             
standardQualifiers = {'is', 'identity';...
                      'isDerivedFrom', 'origin';...
                      'isDescribedBy', 'description';...
                      'isInstanceOf', 'class';...
                      'hasInstance', 'instance';...
                      'encodes', 'encodement';...
                      'hasPart', 'part';...
                      'hasProperty', 'property';...
                      'hasVersion', 'version';...
                      'isEncodedBy', 'encoder';...
                      'isHomologTo', 'homolog';...
                      'isPartOf', 'parthood';...
                      'isPropertyOf', 'propertyBearer';...
                      'isVersionOf', 'hypernym';...
                      'occursIn', 'container';...
                      'hasTaxon', 'taxon'};